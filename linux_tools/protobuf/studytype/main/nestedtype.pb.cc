// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nestedtype.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nestedtype.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msgtype {
namespace nested {
class SearchResponse_ResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse_Result>
     _instance;
} _SearchResponse_Result_default_instance_;
class SearchResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse>
     _instance;
} _SearchResponse_default_instance_;
class SomeOtherMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SomeOtherMessage>
     _instance;
} _SomeOtherMessage_default_instance_;

namespace protobuf_nestedtype_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, snippets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeOtherMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SomeOtherMessage, result_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SearchResponse_Result)},
  { 8, -1, sizeof(SearchResponse)},
  { 14, -1, sizeof(SomeOtherMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchResponse_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SomeOtherMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "nestedtype.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SearchResponse_Result_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SearchResponse_Result_default_instance_);_SearchResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SearchResponse_default_instance_);_SomeOtherMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SomeOtherMessage_default_instance_);_SomeOtherMessage_default_instance_._instance.get_mutable()->result_ = const_cast< ::msgtype::nested::SearchResponse_Result*>(
      ::msgtype::nested::SearchResponse_Result::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020nestedtype.proto\022\016msgtype.nested\"\177\n\016Se"
      "archResponse\0225\n\006result\030\001 \003(\0132%.msgtype.n"
      "ested.SearchResponse.Result\0326\n\006Result\022\013\n"
      "\003url\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022\020\n\010snippets\030\003 "
      "\003(\t\"I\n\020SomeOtherMessage\0225\n\006result\030\001 \001(\0132"
      "%.msgtype.nested.SearchResponse.Resultb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nestedtype.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_nestedtype_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse_Result::kUrlFieldNumber;
const int SearchResponse_Result::kTitleFieldNumber;
const int SearchResponse_Result::kSnippetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse_Result::SearchResponse_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nestedtype_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgtype.nested.SearchResponse.Result)
}
SearchResponse_Result::SearchResponse_Result(const SearchResponse_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      snippets_(from.snippets_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:msgtype.nested.SearchResponse.Result)
}

void SearchResponse_Result::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SearchResponse_Result::~SearchResponse_Result() {
  // @@protoc_insertion_point(destructor:msgtype.nested.SearchResponse.Result)
  SharedDtor();
}

void SearchResponse_Result::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchResponse_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchResponse_Result::descriptor() {
  protobuf_nestedtype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nestedtype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse_Result& SearchResponse_Result::default_instance() {
  protobuf_nestedtype_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchResponse_Result* SearchResponse_Result::New(::google::protobuf::Arena* arena) const {
  SearchResponse_Result* n = new SearchResponse_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:msgtype.nested.SearchResponse.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  snippets_.Clear();
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SearchResponse_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgtype.nested.SearchResponse.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msgtype.nested.SearchResponse.Result.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msgtype.nested.SearchResponse.Result.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string snippets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_snippets()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snippets(this->snippets_size() - 1).data(),
            static_cast<int>(this->snippets(this->snippets_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "msgtype.nested.SearchResponse.Result.snippets"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgtype.nested.SearchResponse.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgtype.nested.SearchResponse.Result)
  return false;
#undef DO_
}

void SearchResponse_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgtype.nested.SearchResponse.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgtype.nested.SearchResponse.Result.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgtype.nested.SearchResponse.Result.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // repeated string snippets = 3;
  for (int i = 0, n = this->snippets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippets(i).data(), static_cast<int>(this->snippets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgtype.nested.SearchResponse.Result.snippets");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->snippets(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:msgtype.nested.SearchResponse.Result)
}

::google::protobuf::uint8* SearchResponse_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgtype.nested.SearchResponse.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgtype.nested.SearchResponse.Result.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgtype.nested.SearchResponse.Result.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // repeated string snippets = 3;
  for (int i = 0, n = this->snippets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippets(i).data(), static_cast<int>(this->snippets(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "msgtype.nested.SearchResponse.Result.snippets");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->snippets(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgtype.nested.SearchResponse.Result)
  return target;
}

size_t SearchResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgtype.nested.SearchResponse.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string snippets = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->snippets_size());
  for (int i = 0, n = this->snippets_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->snippets(i));
  }

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchResponse_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgtype.nested.SearchResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgtype.nested.SearchResponse.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgtype.nested.SearchResponse.Result)
    MergeFrom(*source);
  }
}

void SearchResponse_Result::MergeFrom(const SearchResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgtype.nested.SearchResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  snippets_.MergeFrom(from.snippets_);
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
}

void SearchResponse_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgtype.nested.SearchResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse_Result::CopyFrom(const SearchResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgtype.nested.SearchResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse_Result::IsInitialized() const {
  return true;
}

void SearchResponse_Result::Swap(SearchResponse_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse_Result::InternalSwap(SearchResponse_Result* other) {
  using std::swap;
  snippets_.InternalSwap(&other->snippets_);
  url_.Swap(&other->url_);
  title_.Swap(&other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchResponse_Result::GetMetadata() const {
  protobuf_nestedtype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nestedtype_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchResponse_Result

// string url = 1;
void SearchResponse_Result::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchResponse_Result::url() const {
  // @@protoc_insertion_point(field_get:msgtype.nested.SearchResponse.Result.url)
  return url_.GetNoArena();
}
void SearchResponse_Result::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msgtype.nested.SearchResponse.Result.url)
}
#if LANG_CXX11
void SearchResponse_Result::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msgtype.nested.SearchResponse.Result.url)
}
#endif
void SearchResponse_Result::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msgtype.nested.SearchResponse.Result.url)
}
void SearchResponse_Result::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msgtype.nested.SearchResponse.Result.url)
}
::std::string* SearchResponse_Result::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:msgtype.nested.SearchResponse.Result.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchResponse_Result::release_url() {
  // @@protoc_insertion_point(field_release:msgtype.nested.SearchResponse.Result.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchResponse_Result::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:msgtype.nested.SearchResponse.Result.url)
}

// string title = 2;
void SearchResponse_Result::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchResponse_Result::title() const {
  // @@protoc_insertion_point(field_get:msgtype.nested.SearchResponse.Result.title)
  return title_.GetNoArena();
}
void SearchResponse_Result::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msgtype.nested.SearchResponse.Result.title)
}
#if LANG_CXX11
void SearchResponse_Result::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msgtype.nested.SearchResponse.Result.title)
}
#endif
void SearchResponse_Result::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msgtype.nested.SearchResponse.Result.title)
}
void SearchResponse_Result::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msgtype.nested.SearchResponse.Result.title)
}
::std::string* SearchResponse_Result::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:msgtype.nested.SearchResponse.Result.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchResponse_Result::release_title() {
  // @@protoc_insertion_point(field_release:msgtype.nested.SearchResponse.Result.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchResponse_Result::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:msgtype.nested.SearchResponse.Result.title)
}

// repeated string snippets = 3;
int SearchResponse_Result::snippets_size() const {
  return snippets_.size();
}
void SearchResponse_Result::clear_snippets() {
  snippets_.Clear();
}
const ::std::string& SearchResponse_Result::snippets(int index) const {
  // @@protoc_insertion_point(field_get:msgtype.nested.SearchResponse.Result.snippets)
  return snippets_.Get(index);
}
::std::string* SearchResponse_Result::mutable_snippets(int index) {
  // @@protoc_insertion_point(field_mutable:msgtype.nested.SearchResponse.Result.snippets)
  return snippets_.Mutable(index);
}
void SearchResponse_Result::set_snippets(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:msgtype.nested.SearchResponse.Result.snippets)
  snippets_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SearchResponse_Result::set_snippets(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:msgtype.nested.SearchResponse.Result.snippets)
  snippets_.Mutable(index)->assign(std::move(value));
}
#endif
void SearchResponse_Result::set_snippets(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  snippets_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:msgtype.nested.SearchResponse.Result.snippets)
}
void SearchResponse_Result::set_snippets(int index, const char* value, size_t size) {
  snippets_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:msgtype.nested.SearchResponse.Result.snippets)
}
::std::string* SearchResponse_Result::add_snippets() {
  // @@protoc_insertion_point(field_add_mutable:msgtype.nested.SearchResponse.Result.snippets)
  return snippets_.Add();
}
void SearchResponse_Result::add_snippets(const ::std::string& value) {
  snippets_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:msgtype.nested.SearchResponse.Result.snippets)
}
#if LANG_CXX11
void SearchResponse_Result::add_snippets(::std::string&& value) {
  snippets_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:msgtype.nested.SearchResponse.Result.snippets)
}
#endif
void SearchResponse_Result::add_snippets(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  snippets_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:msgtype.nested.SearchResponse.Result.snippets)
}
void SearchResponse_Result::add_snippets(const char* value, size_t size) {
  snippets_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:msgtype.nested.SearchResponse.Result.snippets)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchResponse_Result::snippets() const {
  // @@protoc_insertion_point(field_list:msgtype.nested.SearchResponse.Result.snippets)
  return snippets_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SearchResponse_Result::mutable_snippets() {
  // @@protoc_insertion_point(field_mutable_list:msgtype.nested.SearchResponse.Result.snippets)
  return &snippets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse::SearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nestedtype_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgtype.nested.SearchResponse)
}
SearchResponse::SearchResponse(const SearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      result_(from.result_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:msgtype.nested.SearchResponse)
}

void SearchResponse::SharedCtor() {
  _cached_size_ = 0;
}

SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:msgtype.nested.SearchResponse)
  SharedDtor();
}

void SearchResponse::SharedDtor() {
}

void SearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchResponse::descriptor() {
  protobuf_nestedtype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nestedtype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse& SearchResponse::default_instance() {
  protobuf_nestedtype_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchResponse* SearchResponse::New(::google::protobuf::Arena* arena) const {
  SearchResponse* n = new SearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:msgtype.nested.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.Clear();
  _internal_metadata_.Clear();
}

bool SearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgtype.nested.SearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .msgtype.nested.SearchResponse.Result result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgtype.nested.SearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgtype.nested.SearchResponse)
  return false;
#undef DO_
}

void SearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgtype.nested.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .msgtype.nested.SearchResponse.Result result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->result(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:msgtype.nested.SearchResponse)
}

::google::protobuf::uint8* SearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgtype.nested.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .msgtype.nested.SearchResponse.Result result = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->result_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->result(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgtype.nested.SearchResponse)
  return target;
}

size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgtype.nested.SearchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .msgtype.nested.SearchResponse.Result result = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->result_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->result(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgtype.nested.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgtype.nested.SearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgtype.nested.SearchResponse)
    MergeFrom(*source);
  }
}

void SearchResponse::MergeFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgtype.nested.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  result_.MergeFrom(from.result_);
}

void SearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgtype.nested.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgtype.nested.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::Swap(SearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse::InternalSwap(SearchResponse* other) {
  using std::swap;
  result_.InternalSwap(&other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  protobuf_nestedtype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nestedtype_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchResponse

// repeated .msgtype.nested.SearchResponse.Result result = 1;
int SearchResponse::result_size() const {
  return result_.size();
}
void SearchResponse::clear_result() {
  result_.Clear();
}
const ::msgtype::nested::SearchResponse_Result& SearchResponse::result(int index) const {
  // @@protoc_insertion_point(field_get:msgtype.nested.SearchResponse.result)
  return result_.Get(index);
}
::msgtype::nested::SearchResponse_Result* SearchResponse::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:msgtype.nested.SearchResponse.result)
  return result_.Mutable(index);
}
::msgtype::nested::SearchResponse_Result* SearchResponse::add_result() {
  // @@protoc_insertion_point(field_add:msgtype.nested.SearchResponse.result)
  return result_.Add();
}
::google::protobuf::RepeatedPtrField< ::msgtype::nested::SearchResponse_Result >*
SearchResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:msgtype.nested.SearchResponse.result)
  return &result_;
}
const ::google::protobuf::RepeatedPtrField< ::msgtype::nested::SearchResponse_Result >&
SearchResponse::result() const {
  // @@protoc_insertion_point(field_list:msgtype.nested.SearchResponse.result)
  return result_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SomeOtherMessage::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SomeOtherMessage::SomeOtherMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nestedtype_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgtype.nested.SomeOtherMessage)
}
SomeOtherMessage::SomeOtherMessage(const SomeOtherMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::msgtype::nested::SearchResponse_Result(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:msgtype.nested.SomeOtherMessage)
}

void SomeOtherMessage::SharedCtor() {
  result_ = NULL;
  _cached_size_ = 0;
}

SomeOtherMessage::~SomeOtherMessage() {
  // @@protoc_insertion_point(destructor:msgtype.nested.SomeOtherMessage)
  SharedDtor();
}

void SomeOtherMessage::SharedDtor() {
  if (this != internal_default_instance()) delete result_;
}

void SomeOtherMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SomeOtherMessage::descriptor() {
  protobuf_nestedtype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nestedtype_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SomeOtherMessage& SomeOtherMessage::default_instance() {
  protobuf_nestedtype_2eproto::InitDefaults();
  return *internal_default_instance();
}

SomeOtherMessage* SomeOtherMessage::New(::google::protobuf::Arena* arena) const {
  SomeOtherMessage* n = new SomeOtherMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SomeOtherMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:msgtype.nested.SomeOtherMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  _internal_metadata_.Clear();
}

bool SomeOtherMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgtype.nested.SomeOtherMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .msgtype.nested.SearchResponse.Result result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgtype.nested.SomeOtherMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgtype.nested.SomeOtherMessage)
  return false;
#undef DO_
}

void SomeOtherMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgtype.nested.SomeOtherMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .msgtype.nested.SearchResponse.Result result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->result_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:msgtype.nested.SomeOtherMessage)
}

::google::protobuf::uint8* SomeOtherMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgtype.nested.SomeOtherMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .msgtype.nested.SearchResponse.Result result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->result_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgtype.nested.SomeOtherMessage)
  return target;
}

size_t SomeOtherMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgtype.nested.SomeOtherMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .msgtype.nested.SearchResponse.Result result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SomeOtherMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgtype.nested.SomeOtherMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SomeOtherMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SomeOtherMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgtype.nested.SomeOtherMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgtype.nested.SomeOtherMessage)
    MergeFrom(*source);
  }
}

void SomeOtherMessage::MergeFrom(const SomeOtherMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgtype.nested.SomeOtherMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    mutable_result()->::msgtype::nested::SearchResponse_Result::MergeFrom(from.result());
  }
}

void SomeOtherMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgtype.nested.SomeOtherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SomeOtherMessage::CopyFrom(const SomeOtherMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgtype.nested.SomeOtherMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SomeOtherMessage::IsInitialized() const {
  return true;
}

void SomeOtherMessage::Swap(SomeOtherMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SomeOtherMessage::InternalSwap(SomeOtherMessage* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SomeOtherMessage::GetMetadata() const {
  protobuf_nestedtype_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nestedtype_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SomeOtherMessage

// .msgtype.nested.SearchResponse.Result result = 1;
bool SomeOtherMessage::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
void SomeOtherMessage::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) delete result_;
  result_ = NULL;
}
const ::msgtype::nested::SearchResponse_Result& SomeOtherMessage::result() const {
  const ::msgtype::nested::SearchResponse_Result* p = result_;
  // @@protoc_insertion_point(field_get:msgtype.nested.SomeOtherMessage.result)
  return p != NULL ? *p : *reinterpret_cast<const ::msgtype::nested::SearchResponse_Result*>(
      &::msgtype::nested::_SearchResponse_Result_default_instance_);
}
::msgtype::nested::SearchResponse_Result* SomeOtherMessage::mutable_result() {
  
  if (result_ == NULL) {
    result_ = new ::msgtype::nested::SearchResponse_Result;
  }
  // @@protoc_insertion_point(field_mutable:msgtype.nested.SomeOtherMessage.result)
  return result_;
}
::msgtype::nested::SearchResponse_Result* SomeOtherMessage::release_result() {
  // @@protoc_insertion_point(field_release:msgtype.nested.SomeOtherMessage.result)
  
  ::msgtype::nested::SearchResponse_Result* temp = result_;
  result_ = NULL;
  return temp;
}
void SomeOtherMessage::set_allocated_result(::msgtype::nested::SearchResponse_Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:msgtype.nested.SomeOtherMessage.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace nested
}  // namespace msgtype

// @@protoc_insertion_point(global_scope)
