 



1.  交易模型
        https://www.blockchain.com/en/btc/tx/3f285f083de7c0acabd9f106a43ec42687ab0bebe2e6f0d529db696794540fea?show_adv=true

2. 各种密钥
    # 私钥
          5HusYj2b2x4nroApgfvaSfKYZhRbKFH41bVyPooymbC6KfgSXdD
    # 公钥
          0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd
    # 输入方钱包地址
        1MMMMSUb1piy2ufrSguNUdFmAcvqrQF8M5
        df3bd30160e6c6145baaf2c88a8844c13a00d1d5

        #####encodeBase58 "00df3bd30160e6c6145baaf2c88a8844c13a00d1d5f3526448"
        #####结果为
        #####1MMMMSUb1piy2ufrSguNUdFmAcvqrQF8M5 

        
   # 输出方的钱包地址
    1KKKK6N21XKo48zWKuQKXdvSsCf95ibHFa
    c8e90996c7c6080ee06284600c684ed904d14c5c
          
   # 签名
          签名每次都不一样，不可重复，根本原因在于签名时有个随机数K
          如果非要还原，可直接赋值连接中的签名 
        304402202cb265bf10707bf49346c3515dd3d16fc454618c58ec0a0ff448a676c54ff71302206c6624d762a1fcef4618284ead8f08678ac05b13c84235f1654e6ad168233e8201

   # 上一个交易的hash值
      81b4c832d70cb56ff957589752eb4125a4cab78a25a8fc52d6a09e5bd4404d48

   # 最终生成的交易hash
       3f285f083de7c0acabd9f106a43ec42687ab0bebe2e6f0d529db696794540fea





2. 步骤

# 转换
privateKey in: 0caecf01d74102a28aed6a64dcf1cf7b0e41c4dd6c62f70f46febdc32514f0bd
pubkeyhash in: 76a914df3bd30160e6c6145baaf2c88a8844c13a00d1d588ac
pubkeyhash out: 76a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac

     #return '76a914' + utils.base58CheckDecode(b58str).encode('hex') + '88ac'

这个是最原始的交易数据
myTxn_forSig: 0100000001484d40d45b9ea0d652fca8258ab7caa42541eb52975857f96fb50cd732c8b481000000001976a914df3bd30160e6c6145baaf2c88a8844c13a00d1d588acffffffff0162640100000000001976a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac0000000001000000

拆开
01000000
01
484d40d45b9ea0d652fca8258ab7caa42541eb52975857f96fb50cd732c8b481
00000000
19
76a914df3bd30160e6c6145baaf2c88a8844c13a00d1d588ac
ffffffff
01
6264010000000000
19
76a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac
00000000
01000000

此时做了两次hash， 但还不是最终的交易hash值， 还没有用到私钥
s256: 5fda68729a6312e17e641e9a49fac2a4a6a680126610af573caab270d232f850



sig of the hash, 3046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701

公钥
pubKey: 0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd

pubKey: 0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd

scriptSig 493046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701 41 0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd

拆开
49 
3046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701
41
0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd


# 这次组装的时候才把 这正的签名写进去
int makeRawTransaction----------------------
outputTransactionHash 81b4c832d70cb56ff957589752eb4125a4cab78a25a8fc52d6a09e5bd4404d48
sourceIndex 0
scriptSig 49 3046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701 41 0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd
outputs [[91234, '76a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac']]
int makeRawTransaction----------------------

拆开
01000000
01
484d40d45b9ea0d652fca8258ab7caa42541eb52975857f96fb50cd732c8b481  # 注意这里是逆序的
00000000
8c
49 3046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701 41 0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd
ffffffff
01
62640100000000001976a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac
00000000

hashToSign, 5fda68729a6312e17e641e9a49fac2a4a6a680126610af573caab270d232f850
sig 942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d597 5fda68729a6312e17e641e9a49fac2a4a6a680126610af573caab270d232f850
result: True
parsed, ['0100000001484d40d45b9ea0d652fca8258ab7caa42541eb52975857f96fb50cd732c8b48100000000', '3046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701', '0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd', 'ffffffff0162640100000000001976a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac00000000']
拆开
'01000000
01
484d40d45b9ea0d652fca8258ab7caa42541eb52975857f96fb50cd732c8b481
00000000',

这是签名
'3046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701',
# 这是公钥
'0414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcd',
# 这是输出
'ffffffff
01
62640100000000001976a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac
00000000'

hashToSign, 5fda68729a6312e17e641e9a49fac2a4a6a680126610af573caab270d232f850
sig 942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d597 5fda68729a6312e17e641e9a49fac2a4a6a680126610af573caab270d232f850
result: True

SIGNED TXN 0100000001484d40d45b9ea0d652fca8258ab7caa42541eb52975857f96fb50cd732c8b481000000008c493046022100942e8581ed6b6a7056a339a027f941bab921c11be8542c8c2e20b4d51afcc016022100b1dd8d2dfc6ea122a1d26ce436c898c219a893d977331ea1123bbbfe8665d59701410414e301b2328f17442c0b8310d787bf3d8a404cfbd0704f135b6ad4b2d3ee751310f981926e53a6e8c39bd7d3fefd576c543cce493cbac06388f2651d1aacbfcdffffffff0162640100000000001976a914c8e90996c7c6080ee06284600c684ed904d14c5c88ac00000000

# Verifies that a transaction is properly signed, assuming the generated scriptPubKey matches
# the one in the previous transaction's output
def verifyTxnSignature(txn):                    
    parsed = parseTxn(txn)      
    signableTxn = getSignableTxn(parsed)
    hashToSign = hashlib.sha256(hashlib.sha256(signableTxn.decode('hex')).digest()).digest().encode('hex')
    print "parsed,", parsed
    print "hashToSign,",hashToSign 
    assert(parsed[1][-2:] == '01') # hashtype
    sig = keyUtils.derSigToHexSig(parsed[1][:-2])
    print "sig", sig, hashToSign
    public_key = parsed[2]
    vk = ecdsa.VerifyingKey.from_string(public_key[2:].decode('hex'), curve=ecdsa.SECP256k1)
    print "result:", (vk.verify_digest(sig.decode('hex'), hashToSign.decode('hex')))
    assert(vk.verify_digest(sig.decode('hex'), hashToSign.decode('hex')))
