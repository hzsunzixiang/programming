// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgtype.proto

#ifndef PROTOBUF_msgtype_2eproto__INCLUDED
#define PROTOBUF_msgtype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace msgtype {
class SearchRequest;
class SearchRequestDefaultTypeInternal;
extern SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;
}  // namespace msgtype

namespace msgtype {

namespace protobuf_msgtype_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_msgtype_2eproto

// ===================================================================

class SearchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msgtype.SearchRequest) */ {
 public:
  SearchRequest();
  virtual ~SearchRequest();

  SearchRequest(const SearchRequest& from);

  inline SearchRequest& operator=(const SearchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SearchRequest(SearchRequest&& from) noexcept
    : SearchRequest() {
    *this = ::std::move(from);
  }

  inline SearchRequest& operator=(SearchRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchRequest& default_instance();

  static inline const SearchRequest* internal_default_instance() {
    return reinterpret_cast<const SearchRequest*>(
               &_SearchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SearchRequest* other);
  friend void swap(SearchRequest& a, SearchRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SearchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchRequest& from);
  void MergeFrom(const SearchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string query = 1;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // optional bytes reserved = 4;
  bool has_reserved() const;
  void clear_reserved();
  static const int kReservedFieldNumber = 4;
  const ::std::string& reserved() const;
  void set_reserved(const ::std::string& value);
  #if LANG_CXX11
  void set_reserved(::std::string&& value);
  #endif
  void set_reserved(const char* value);
  void set_reserved(const void* value, size_t size);
  ::std::string* mutable_reserved();
  ::std::string* release_reserved();
  void set_allocated_reserved(::std::string* reserved);

  // optional int32 page_number = 2;
  bool has_page_number() const;
  void clear_page_number();
  static const int kPageNumberFieldNumber = 2;
  ::google::protobuf::int32 page_number() const;
  void set_page_number(::google::protobuf::int32 value);

  // optional int32 result_per_page = 3;
  bool has_result_per_page() const;
  void clear_result_per_page();
  static const int kResultPerPageFieldNumber = 3;
  ::google::protobuf::int32 result_per_page() const;
  void set_result_per_page(::google::protobuf::int32 value);

  // optional int32 result_default = 5 [default = 256];
  bool has_result_default() const;
  void clear_result_default();
  static const int kResultDefaultFieldNumber = 5;
  ::google::protobuf::int32 result_default() const;
  void set_result_default(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msgtype.SearchRequest)
 private:
  void set_has_query();
  void clear_has_query();
  void set_has_page_number();
  void clear_has_page_number();
  void set_has_result_per_page();
  void clear_has_result_per_page();
  void set_has_reserved();
  void clear_has_reserved();
  void set_has_result_default();
  void clear_has_result_default();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr reserved_;
  ::google::protobuf::int32 page_number_;
  ::google::protobuf::int32 result_per_page_;
  ::google::protobuf::int32 result_default_;
  friend struct protobuf_msgtype_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SearchRequest

// required string query = 1;
inline bool SearchRequest::has_query() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchRequest::set_has_query() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchRequest::clear_has_query() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_query();
}
inline const ::std::string& SearchRequest::query() const {
  // @@protoc_insertion_point(field_get:msgtype.SearchRequest.query)
  return query_.GetNoArena();
}
inline void SearchRequest::set_query(const ::std::string& value) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msgtype.SearchRequest.query)
}
#if LANG_CXX11
inline void SearchRequest::set_query(::std::string&& value) {
  set_has_query();
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msgtype.SearchRequest.query)
}
#endif
inline void SearchRequest::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msgtype.SearchRequest.query)
}
inline void SearchRequest::set_query(const char* value, size_t size) {
  set_has_query();
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msgtype.SearchRequest.query)
}
inline ::std::string* SearchRequest::mutable_query() {
  set_has_query();
  // @@protoc_insertion_point(field_mutable:msgtype.SearchRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchRequest::release_query() {
  // @@protoc_insertion_point(field_release:msgtype.SearchRequest.query)
  clear_has_query();
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    set_has_query();
  } else {
    clear_has_query();
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:msgtype.SearchRequest.query)
}

// optional int32 page_number = 2;
inline bool SearchRequest::has_page_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SearchRequest::set_has_page_number() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SearchRequest::clear_has_page_number() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SearchRequest::clear_page_number() {
  page_number_ = 0;
  clear_has_page_number();
}
inline ::google::protobuf::int32 SearchRequest::page_number() const {
  // @@protoc_insertion_point(field_get:msgtype.SearchRequest.page_number)
  return page_number_;
}
inline void SearchRequest::set_page_number(::google::protobuf::int32 value) {
  set_has_page_number();
  page_number_ = value;
  // @@protoc_insertion_point(field_set:msgtype.SearchRequest.page_number)
}

// optional int32 result_per_page = 3;
inline bool SearchRequest::has_result_per_page() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SearchRequest::set_has_result_per_page() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SearchRequest::clear_has_result_per_page() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SearchRequest::clear_result_per_page() {
  result_per_page_ = 0;
  clear_has_result_per_page();
}
inline ::google::protobuf::int32 SearchRequest::result_per_page() const {
  // @@protoc_insertion_point(field_get:msgtype.SearchRequest.result_per_page)
  return result_per_page_;
}
inline void SearchRequest::set_result_per_page(::google::protobuf::int32 value) {
  set_has_result_per_page();
  result_per_page_ = value;
  // @@protoc_insertion_point(field_set:msgtype.SearchRequest.result_per_page)
}

// optional bytes reserved = 4;
inline bool SearchRequest::has_reserved() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchRequest::set_has_reserved() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchRequest::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchRequest::clear_reserved() {
  reserved_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reserved();
}
inline const ::std::string& SearchRequest::reserved() const {
  // @@protoc_insertion_point(field_get:msgtype.SearchRequest.reserved)
  return reserved_.GetNoArena();
}
inline void SearchRequest::set_reserved(const ::std::string& value) {
  set_has_reserved();
  reserved_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msgtype.SearchRequest.reserved)
}
#if LANG_CXX11
inline void SearchRequest::set_reserved(::std::string&& value) {
  set_has_reserved();
  reserved_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msgtype.SearchRequest.reserved)
}
#endif
inline void SearchRequest::set_reserved(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reserved();
  reserved_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msgtype.SearchRequest.reserved)
}
inline void SearchRequest::set_reserved(const void* value, size_t size) {
  set_has_reserved();
  reserved_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msgtype.SearchRequest.reserved)
}
inline ::std::string* SearchRequest::mutable_reserved() {
  set_has_reserved();
  // @@protoc_insertion_point(field_mutable:msgtype.SearchRequest.reserved)
  return reserved_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchRequest::release_reserved() {
  // @@protoc_insertion_point(field_release:msgtype.SearchRequest.reserved)
  clear_has_reserved();
  return reserved_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchRequest::set_allocated_reserved(::std::string* reserved) {
  if (reserved != NULL) {
    set_has_reserved();
  } else {
    clear_has_reserved();
  }
  reserved_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserved);
  // @@protoc_insertion_point(field_set_allocated:msgtype.SearchRequest.reserved)
}

// optional int32 result_default = 5 [default = 256];
inline bool SearchRequest::has_result_default() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SearchRequest::set_has_result_default() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SearchRequest::clear_has_result_default() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SearchRequest::clear_result_default() {
  result_default_ = 256;
  clear_has_result_default();
}
inline ::google::protobuf::int32 SearchRequest::result_default() const {
  // @@protoc_insertion_point(field_get:msgtype.SearchRequest.result_default)
  return result_default_;
}
inline void SearchRequest::set_result_default(::google::protobuf::int32 value) {
  set_has_result_default();
  result_default_ = value;
  // @@protoc_insertion_point(field_set:msgtype.SearchRequest.result_default)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace msgtype

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msgtype_2eproto__INCLUDED
